version: "3.8"
services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile_PYTHON
    environment:
    - PYTHONUNBUFFERED=1
    ports:
        - "5000:5000"
    volumes:
      - ./shared_volume:/shared_volume
      - ./api:/usr/src/api
    networks:
      - my_network
    depends_on:
        db:
            condition: service_healthy

  db:
    container_name: db
    build:
      context: .
      dockerfile: Dockerfile_MYSQL
    restart: always
    environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_ROOT_HOST: '%'
        # MYSQL_DATABASE: MYSQL_DATABASE
        # MYSQL_USER: MYSQL_USER
        # MYSQL_PASSWORD: MYSQL_PASSWORD
    healthcheck:
      test:  mysql --user=root --password=root -e 'select * from MYSQL_DATABASE.m1' MYSQL_DATABASE
    volumes:
      - ./shared_volume:/shared_volume
      - ./shared_volume/bruno/db_file:/docker-entrypoint-initdb.d
    ports:
        - "9906:3306"
    networks:
      - my_network
  
  phpmyadmin:
      container_name: phpmyadmin
      build:
        context: .
        dockerfile: Dockerfile_PHPMYADMIN
      networks:
        - my_network
      ports:
          - '8080:80'
      restart: always
      environment:
          PMA_HOST: db
      depends_on:
          db:
            condition: service_healthy
  php:
    container_name: php
    build:
      context: .
      dockerfile: Dockerfile_PHP
    tty: true           # Container alive
    environment:
      - output_agents=${output_agents}
      - host=api
    ports:
      - "80:80"
    volumes:
      - ./shared_volume:/var/www/html
      - ./shared_volume:/shared_volume
    depends_on:
          db:
            condition: service_healthy
    networks:
      - my_network

networks:
  my_network:
    name: my_network
    driver: bridge
